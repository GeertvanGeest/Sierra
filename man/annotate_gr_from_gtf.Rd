% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Annotate.R
\name{annotate_gr_from_gtf}
\alias{annotate_gr_from_gtf}
\title{Annotates a granges object with overlapping genes from gtf file.}
\usage{
annotate_gr_from_gtf(gr, invert_strand = FALSE, gtf_gr = NULL,
  annotationType = "within", transcriptDetails = FALSE, gtf_TxDb,
  annotation_correction = TRUE, genome = NULL,
  pA_motif_max_position = 50, AAA_motif_min_position = 10)
}
\arguments{
\item{gr}{a granges object of peaks to annotate}

\item{invert_strand}{Boolean to signifiy if strand of gr peaks should be inversed}

\item{gtf_gr}{granges gtf file that contains annotation information}

\item{annotationType}{can be assigned "within" or "all". Default is "within" which states that the peak with gr must be within annotation feature (eg exon)}

\item{transcriptDetails}{Boolean. If false will only return gene name. If true will return internal transcript position feature (eg exon/intron)}

\item{gtf_TxDb}{same as gtf_gr but as a TxDb object.}

\item{annotation_correction}{Boolean. When multiple overlapping genes are identified will
prioritise gene based on annotation. 3'UTR annotation trumps all other annotation.}

\item{genome}{genome object. If NOT NULL then will perform pA motif analysis.}

\item{pA_motif_max_position}{Any AAUAAA after this position are not considered (default 50nt)}

\item{AAA_motif_min_position}{Any polyA stretches before this postion are not considered (default 10)}
}
\value{
a dataframe with appended columns containing annotation
}
\description{
gr is the genomic ranges that need to be annotation. Ideally original input should be in the format:
}
\details{
chr8:70331172-70331574:+   # chr:start-end:strand

This could already exist within an R object or you can copy it in via readClipboard.

gr <- GRanges(readClipboard())

You need to run the following code:
        gtf_file <- "u:/Reference/hg38/hg38_gene.gtf.gz"
        gtf_file <- "u:/Reference/mm10/mm10_gene.gtf.gz"
        gtf_file <- "u:/Reference/mm10/cellranger_genes.gtf.gz"
       gtf_gr <- rtracklayer::import(gtf_file)
       gtf_TxDb <- GenomicFeatures::makeTxDbFromGFF(gtf_file, format="gtf")

annotationType can be c("any", "start", "end", "within", "equal"),
}
